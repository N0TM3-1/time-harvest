local scene

function init(self)
	msg.post("game:/manager", "require")
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("scene") then
		scene = message[1]
	elseif message_id == hash("trigger_response") and message.enter and scene == "farm" then
		print("Player entered house")
		msg.post("game:/manager#manager", "switch", {"#farm", "#house", "house"}) -- TIP: message: {current scene id, next scene id, scene to be set}
	elseif message_id == hash("trigger_response") and message.enter and scene == "house" then
		print("Player exited house")
		msg.post("game:/manager#manager", "switch", {"#house", "#farm", "farm"}) -- TIP: message: {current scene id, next scene id, scene to be set}
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
