go.property("SPEED", 10)

local pos = {}

local function move(self, action_id, action)
	pos.x = go.get_position("player").x
	pos.y = go.get_position("player").y

	if action_id == hash("w") then
		pos.y = pos.y + self.SPEED
	end
	if action_id == hash("s") then
		pos.y = pos.y - self.SPEED
	end
	if action_id == hash("d") then
		pos.x = pos.x + self.SPEED
	end
	if action_id == hash("a") then
		pos.x = pos.x - self.SPEED
	end
	msg.post("/gui#game", "position", pos)
	go.set_position(vmath.vector3(pos.x, pos.y, 0), "player")
end

function init(self)
	msg.post(".", "acquire_input_focus")

	pos.x = go.get_position("player").x
	pos.y = go.get_position("player").y
	msg.post("/gui#game", "position", pos)
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	move(self, action_id, action)
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
