require 'modules.convert'
local ids = require 'modules.ids'

local tx, ty, tz -- Tile x, Tile y, Tile z

local select
local select_id

local scene

local INTERACT_DISTANCE = 64 -- Adjust based on your tile size

local current_highlight = {}

local function set_highlight(x, y, z)
	tx, ty, tz = convert.world_to_tile(x, y, 32)
	if current_highlight.x ~= nil then
		if current_tile ~= { tx, ty } then
			msg.post("/map#tilemap", "highlight", { true, current_highlight.x, current_highlight.y, x = tx, y = ty })
		end
	else
		msg.post("/map#tilemap", "highlight",
			{ false, current = { current_highlight.x, current_highlight.y }, x = tx, y = ty })
	end
	current_tile = { x = tx, y = ty }
	current_highlight = { x = tx, y = ty, z = tz }
end

local function can_interact(player_pos, tile_pos)
	local dx = player_pos.x - tile_pos.x
	local dy = player_pos.y - tile_pos.y
	local distance = math.sqrt(dx * dx + dy * dy) -- Pythagorean theorem
	return distance <= INTERACT_DISTANCE
end

local function interact(x, y, z)
	tx, ty, tz = convert.world_to_tile(x, y, 32)
	if select_id == ids.wheat_seeds then
		if tilemap.get_tile("/map#farm", "bg", tx, ty) == 3 then
			msg.post("/map#tilemap", "planted", { tx, ty })
			msg.post("#inventory", "remove", { select })
			sound.play("/sounds#plant")
		end
	elseif select_id == ids.plow then
		if tilemap.get_tile("/map#farm", "bg", tx, ty) <= 3 then
			msg.post("/map#tilemap", "till", { tx, ty })
		end
	elseif select_id == ids.scythe then
		if tilemap.get_tile("/map#farm", "bg", tx, ty) == 6 then
			msg.post("/map#tilemap", "harvest", { tx, ty })
			msg.post("#inventory", "add", { 2 }) -- IMPORTANT message[1]:item ID; message[2]: item number
			sound.play("/sounds#harvest")
		end
	elseif select_id == ids.watering_can then
		if tilemap.get_tile("/map#farm", "bg", tx, ty) > 3 then
			msg.post("/map#tilemap", "water", { tx, ty })
		end
	end
end

function init(self)
	msg.post(".", "acquire_input_focus")
	timer.delay(1, false, function() msg.post("game:/player_manager#inventory", "require") end)
end

function update(self, dt)
	player_pos = go.get_position()
end

function on_message(self, message_id, message, sender)
	if message_id == hash("slot") then
		select = message[1]
	end
	if message_id == hash("select_id") then
		select_id = message[1]
	end
	if message_id == hash("scene") then
		scene = message[1]
	end
end

function on_input(self, action_id, action)
	msg.post("game:/manager#manager", "get_scene")
	if can_interact(player_pos, vmath.vector3(convert.screen_to_world(action.x, action.y, 0, "/camera#camera"))) then
		set_highlight(convert.screen_to_world(action.x, action.y, 0, "/camera#camera"))
		if action_id == hash("touch") and action.pressed and scene == "farm" then
			interact(convert.screen_to_world(action.x, action.y, 0, "/camera#camera"))
		end
	end
end
