require 'modules.convert'

local tx, ty, tz -- Tile x, Tile y, Tile z

local select
local select_id

local scene

local function plant(x, y, z)
	tx, ty, tz = convert.world_to_tile(x, y, 32)
	if select_id == 1 then
		if tilemap.get_tile("/map#farm", "bg", tx, ty) <= 3 then
			msg.post("/map#tilemap", "planted", {tx, ty})
			msg.post("#inventory", "remove", {select})
		end
	else
		if tilemap.get_tile("/map#farm", "bg", tx, ty) <= 3 then
			msg.post("/map#tilemap", "till", {tx, ty})
		end
	end
end

local function harvest(x, y, z)
	tx, ty, tz = convert.world_to_tile(x, y, 32)
	if tilemap.get_tile("/map#farm", "bg", tx, ty) == 6 then
		msg.post("/map#tilemap", "harvest", {tx, ty})
		msg.post("#inventory", "add", {2, 1})-- IMPORTANT message[1]:item ID; message[2]: item number
	end
end

function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("#inventory", "require")
end

function on_message(self, message_id, message, sender)
	if message_id == hash("slot") then
		select = message[1]
	end
	if message_id == hash("select_id") then
		select_id = message[1]
	end
	if message_id == hash("scene") then
		scene = message[1]
	end
end

function on_input(self, action_id, action)
	msg.post("/manager#manager", "get_scene")
	if action_id == hash("touch") and action.pressed and scene == "main" then
		plant(convert.screen_to_world(action.x, action.y, action.x, "/camera#camera"))
		harvest(convert.screen_to_world(action.x, action.y, action.x, "/camera#camera"))
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end