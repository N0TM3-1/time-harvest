require 'modules.switch'

local scene = "farm" -- Current scene
local switching = false
local switch_msg={}
local urls = {}      -- URLs for requiring objects

local function broadcast(message_id, message)
    for k, v in pairs(urls) do
        msg.post(v, message_id, message)
    end
end

function init(self)
    msg.post(".", "acquire_input_focus")
    msg.post("/gui#shop", "disable")
    msg.post("main:/go#farm", "load")
end

function on_input(self, action_id, action)
    if action_id == hash("e") and action.pressed then
        if scene == "farm" then
            msg.post("/gui", "disable")
            msg.post("/gui#shop", "enable")
            scene = "shop"
        elseif scene == "shop" then
            msg.post("/gui", "enable")
            msg.post("/gui#shop", "disable")
            scene = "farm"
        end
    end
end

function on_message(self, message_id, message, sender)
    if message_id == hash("require") then
        table.insert(urls, sender)
    end
    if message_id == hash("get_scene") then
        msg.post(sender, "scene", { scene })
    end
    if message_id == hash("switch") then
        switch_msg = message
        print("Recieved switch message for scene " .. message[2])
        msg.post("main:/go" .. message[2], "load")
        switching = true
        print(switching)
    end
    if message_id == hash("proxy_loaded") and switching then 
        print("Started switch")
        switch.change("main:/go".. switch_msg[1], sender)
        scene = switch_msg[3]
        switching = false
    elseif message_id == hash("proxy_loaded") and not switching then
        switch.load(sender)
    end
    broadcast("scene", { scene })
end
