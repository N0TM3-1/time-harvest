local slot = {}
local label = {}
local select = 1

local function init_gui()	
	for i=1, 9 do
		slot[i] = gui.get_node("inv_".. tostring(i))
	end
	for i=1,9 do
		label[i]= gui.get_node("num"..tostring(i))
	end
end

local function change_item(id, number, slot_num) -- TODO: Change ID system
	if id == 0 then
		gui.play_flipbook(slot[slot_num], "frame")
	end
	if id == 1 then
		gui.set_texture(slot[slot_num], "inventory")
		gui.play_flipbook(slot[slot_num], "seeds")
	elseif id == 2 then
		gui.set_texture(slot[slot_num], "inventory")
		gui.play_flipbook(slot[slot_num], "wheat")
	elseif id == 3 then
		gui.set_texture(slot[slot_num], "inventory")
		gui.play_flipbook(slot[slot_num], "plow")
	elseif id == 4 then
		gui.set_texture(slot[slot_num], "inventory")
		gui.play_flipbook(slot[slot_num], "scythe")
	elseif id == 5 then
		gui.set_texture(slot[slot_num], "inventory")
		gui.play_flipbook(slot[slot_num], "watering_can")
	end
	gui.set_text(label[slot_num], tostring(number))
end

local function hide_number()
	for k,v in pairs(label) do
		local text = gui.get_text(v)
		if tonumber(text) <= 1 then
			gui.set_visible(v, false)
		else
			gui.set_visible(v, true)
		end
	end
end

function init(self)
	msg.post(".", "acquire_input_focus")
	init_gui()
	timer.delay(0.01, false, function()
		msg.post("farm:/player#inventory", "require")
	end)
end

function update(self, dt)
	for k, v in pairs(slot) do
		local pos = gui.get_position(slot[k])
		gui.set_position(slot[k], vmath.vector3(pos.x, 100, pos.z))
	end
	local pos = gui.get_position(slot[select])
	pos.y = 120
	gui.set_position(slot[select], pos)
	hide_number()
end

function on_message(self, message_id, message, sender)
	if message_id == hash("slot") then
		select = message[1]
elseif message_id == hash("item") then
		for i=1, 9 do
			change_item(message[i].id, message[i].num, i)
		end

elseif message_id == hash("enable") then
		for k, v in pairs(slot) do
			gui.set_enabled(v, true)
		end
elseif message_id == hash("disable") then
		for k, v in pairs(slot) do
			gui.set_enabled(v, false)
		end
	elseif message_id == hash("initialized") then
		msg.post(sender, "require")
	end
end