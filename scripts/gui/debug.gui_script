local pos
local zoom
local speed
local nodes = {}

local function init_gui()
	nodes.pos = gui.get_node("location")
	nodes.zoom = gui.get_node("zoom")
	nodes.speed = gui.get_node("speed")
end

local function update_data(message_id, message)
	if message_id == hash("position") then
		gui.set_text(pos, "x:"..message.x.." y:"..message.y)
	end
	if message_id == hash("zoom") then
		gui.set_text(zoom, "Camera zoom:" .. message[1])
	end
	if message_id == hash("speed") then
		gui.set_text(speed, "Speed:" .. message[1])
	end
end

function init(self)
	init_gui()
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	update_data()
	if message_id == hash("enable") then
		for k, v in pairs(nodes) do
			gui.set_enabled(v, true)
		end
	end
	if message_id == hash("disable") then
		for k, v in pairs(nodes) do
			gui.set_enabled(v, false)
		end
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
