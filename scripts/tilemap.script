local persist = require 'persist.persist'

local planted = {}

local function update_map()
	for k, v in pairs(planted) do
		tilemap.set_tile("#farm", "bg", v.x, v.y, v.state+3)
	end
	persist.create("planted", planted, true) --IMPORTANT: Possible problems in the future
end

local function update_state()
	for k, v in pairs(planted) do
		if v.state < 3 then
			v.state = v.state + 1
		end
	end
	update_map()
end

function init(self)
	msg.post("/time#time", "req_time")
	if not persist.exists("planted") then
		persist.create("planted", planted, false) 
	else
		planted = persist.load("planted") --IMPORTANT: Possible problems in the future
		update_map()
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("planted") then
		table.insert(planted, {x = message[1], y=message[2], state = 1})
		update_map()
	end
	if message_id == hash("harvest") then
		tilemap.set_tile("#farm", "bg", message[1], message[2], 2)
		for k, v in pairs(planted) do
			if v.x == message[1] and v.y == message[2] then
				table.remove(planted, k)
			end
		end
	end
	if message_id == hash("tick") then
		update_state()
	end
	persist.create("planted", planted, true) --IMPORTANT: Possible problems in the future
end